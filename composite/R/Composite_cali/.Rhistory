m = sum(obs_rep)
n = length(obs_rep)
# browser()
g = max(10, min(m/2, (n-m)/2, 2+8*((n/1000)**2))) %>% round()
# cat('g', g, '\n')
### create bin averages
for (data_i in 1:data_ls_len){
temp_res = reliability_datapts(obs_rep, data_ls[[data_i]], bins = g, stat_type = stat_type)
assign(paste("recal_bins", data_i, sep=""),temp_res)
}
for (data_i in 1:data_ls_len){
temp_res = melt(get(paste('recal_bins', data_i, sep='')), id="V2")
temp_res[, "variable"] <- paste("Vol.x", data_i, sep='')
assign(paste('melt', data_i, sep=''), temp_res)
}
data = melt1
if (data_ls_len > 1){
for (data_i in 2:data_ls_len){
data = rbind(data, get(paste('melt', data_i, sep='')))
}
}
line_plot = ggplot(data, aes(x=V2,  y=value, color=variable))   +  geom_point()+ geom_line() +
scale_color_manual(labels = title_ls,
values = color_ls) +
guides(color=guide_legend(" ")) +
ggtitle(paste(stat_type, 'Statistics')) +
xlab("Mean Predicted") + ylab("Mean Observed") +
xlim(0, 1) + ylim(-0.05, 1.05)
line_plot = line_plot + geom_abline(intercept = 0, slope = 1, color="black",
linetype="dashed", size=1)
#remove background
line_plot = line_plot + theme_bw()
line_plot = line_plot + theme(legend.position="bottom")
## add data points
for (data_i in 1:data_ls_len){
temp_obs = obs_rep
temp_obs[temp_obs==0] = -0.005 * data_i
temp_obs[temp_obs==1] = 1 + 0.005 * data_i
assign(paste('obs_rep_offset', data_i, sep=''), data.frame(cbind(data_ls[[data_i]], temp_obs)))
}
for (data_i in 1:data_ls_len){
temp_res = melt(get(paste('obs_rep_offset', data_i, sep='')), id="temp_obs")
temp_res[, "variable"] <- paste("Vol.x", data_i, sep='')
assign(paste('obs_rep_offset', data_i, sep=''), temp_res)
}
data_points = obs_rep_offset1
if (data_ls_len > 1){
for (data_i in 2:data_ls_len){
data_points = rbind(data_points, get(paste('obs_rep_offset', data_i, sep='')))
}
}
line_plot = line_plot + geom_point(data = data_points, aes(x=data_points$value,  y=data_points$temp_obs, color=variable)) + geom_point(alpha=0.2)
print(line_plot)
#ggsave(title, device = 'png', width = 6, height = 6)
}
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(range01(log(RS_composite_lab.pred_score.dsv.test.txt))[,1],
range01((RS_composite_lab.pred_score.dsv.test.txt))[,1],
range.n1to1((RS_composite_lab.pred_score.dsv.test.txt))[,1],
sigmoid(range.n1to1((RS_composite_lab.pred_score.dsv.test.txt))[,1])),
'C',
c('DSV', 'rsf', 'cox', 'we'),
c('blue', 'red', 'green', 'yellow'),
'LR SVM original H')
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
n <- length(pred)/10
reliability_datapts <- function(obs, pred, bins=10, stat_type ='H') {
min.pred <- min(pred)
max.pred <- max(pred)
min.max.diff <- max.pred - min.pred
if (stat_type == 'H'){
mtx = cbind(obs, pred)
mtx = as.data.frame(mtx)
mtx = mtx[order(mtx$pred),]
res = data.frame(V1= numeric(0), V2 = numeric(0))
split_mtx = split(mtx, cut(mtx$pred, seq(0,1,1/10), include.lowest=TRUE))
# split_mtx = split(mtx, cut(mtx$pred, seq(0,1,1/bins), include.lowest=TRUE))
for (i in 1:length(split_mtx)){
col_mean = colMeans(split_mtx[[i]])
if (sum(is.na(col_mean)) > 0) {
next
}
res[i,] = col_mean
}
}else{
## C statistics, same number of instances in each bin
mtx = cbind(obs, pred)
mtx = as.data.frame(mtx)
mtx = mtx[order(mtx$pred),]
n <- length(pred)/10
# n <- length(pred)/bins
nr <- nrow(mtx)
split_mtx = split(mtx, rep(1:ceiling(nr/n), each=n, length.out=nr))
res = data.frame(V1= numeric(0), V2 = numeric(0))
for (i in 1:length(split_mtx)){
res[i,] = colMeans(split_mtx[[i]])
}
}
return(res)
}
reliability_diagram = function(obs_rep, data_ls, stat_type,
title_ls,
color_ls, title) {
data_ls_len = length(data_ls)
m = sum(obs_rep)
n = length(obs_rep)
# browser()
g = max(10, min(m/2, (n-m)/2, 2+8*((n/1000)**2))) %>% round()
# cat('g', g, '\n')
### create bin averages
for (data_i in 1:data_ls_len){
temp_res = reliability_datapts(obs_rep, data_ls[[data_i]], bins = g, stat_type = stat_type)
assign(paste("recal_bins", data_i, sep=""),temp_res)
}
for (data_i in 1:data_ls_len){
temp_res = melt(get(paste('recal_bins', data_i, sep='')), id="V2")
temp_res[, "variable"] <- paste("Vol.x", data_i, sep='')
assign(paste('melt', data_i, sep=''), temp_res)
}
data = melt1
if (data_ls_len > 1){
for (data_i in 2:data_ls_len){
data = rbind(data, get(paste('melt', data_i, sep='')))
}
}
line_plot = ggplot(data, aes(x=V2,  y=value, color=variable))   +  geom_point()+ geom_line() +
scale_color_manual(labels = title_ls,
values = color_ls) +
guides(color=guide_legend(" ")) +
ggtitle(paste(stat_type, 'Statistics')) +
xlab("Mean Predicted") + ylab("Mean Observed") +
xlim(0, 1) + ylim(-0.05, 1.05)
line_plot = line_plot + geom_abline(intercept = 0, slope = 1, color="black",
linetype="dashed", size=1)
#remove background
line_plot = line_plot + theme_bw()
line_plot = line_plot + theme(legend.position="bottom")
## add data points
for (data_i in 1:data_ls_len){
temp_obs = obs_rep
temp_obs[temp_obs==0] = -0.005 * data_i
temp_obs[temp_obs==1] = 1 + 0.005 * data_i
assign(paste('obs_rep_offset', data_i, sep=''), data.frame(cbind(data_ls[[data_i]], temp_obs)))
}
for (data_i in 1:data_ls_len){
temp_res = melt(get(paste('obs_rep_offset', data_i, sep='')), id="temp_obs")
temp_res[, "variable"] <- paste("Vol.x", data_i, sep='')
assign(paste('obs_rep_offset', data_i, sep=''), temp_res)
}
data_points = obs_rep_offset1
if (data_ls_len > 1){
for (data_i in 2:data_ls_len){
data_points = rbind(data_points, get(paste('obs_rep_offset', data_i, sep='')))
}
}
line_plot = line_plot + geom_point(data = data_points, aes(x=data_points$value,  y=data_points$temp_obs, color=variable)) + geom_point(alpha=0.2)
print(line_plot)
#ggsave(title, device = 'png', width = 6, height = 6)
}
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(range01(log(RS_composite_lab.pred_score.dsv.test.txt))[,1],
range01((RS_composite_lab.pred_score.dsv.test.txt))[,1],
range.n1to1((RS_composite_lab.pred_score.dsv.test.txt))[,1],
sigmoid(range.n1to1((RS_composite_lab.pred_score.dsv.test.txt))[,1])),
'C',
c('DSV', 'rsf', 'cox', 'we'),
c('blue', 'red', 'green', 'yellow'),
'LR SVM original H')
standardized.pred_score.dsv.test = range01((RS_composite_lab.pred_score.dsv.test.txt))
standardized.pred_score.dsv.test
standardized.pred_score.cox.test = range01((RS_composite_lab.pred_score.cox.test.txt))
standardized.pred_score.cox.test
standardized.pred_score.rsf.test = range01((RS_composite_lab.pred_score.rsf.test.txt+0.000001))
standardized.pred_score.rsf.test
dsv.boot = run_boot(RS_composite_lab.E_test.txt, standardized.pred_score.dsv.test, 25000, 200)
dsv.boot = run_boot(RS_composite_lab.E_test.txt, standardized.pred_score.dsv.test, 2500, 2000)
dsv.boot = run_boot(RS_composite_lab.E_test.txt, standardized.pred_score.dsv.test, 2500, 2000)
dsv.boot[,2]%>%unlist()%>%sum()
dsv.boot
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(range01(log(RS_composite_lab.pred_score.dsv.test.txt))[,1],
range01((RS_composite_lab.pred_score.dsv.test.txt))[,1],
sigmoid(range01((RS_composite_lab.pred_score.dsv.test.txt))[,1]),
range.n1to1((RS_composite_lab.pred_score.dsv.test.txt))[,1],
sigmoid(range.n1to1((RS_composite_lab.pred_score.dsv.test.txt))[,1])),
'C',
c('DSV', 'rsf', 'cox', 'we', 'wefe'),
c('blue', 'red', 'green', 'yellow', 'orange'),
'LR SVM original H')
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(range01(log(RS_composite_lab.pred_score.dsv.test.txt))[,1],
range01((RS_composite_lab.pred_score.dsv.test.txt))[,1],
log(range01((RS_composite_lab.pred_score.dsv.test.txt))[,1]),
range.n1to1((RS_composite_lab.pred_score.dsv.test.txt))[,1],
sigmoid(range.n1to1((RS_composite_lab.pred_score.dsv.test.txt))[,1])),
'C',
c('DSV', 'rsf', 'cox', 'we', 'wefe'),
c('blue', 'red', 'green', 'yellow', 'orange'),
'LR SVM original H')
plot.test = plot(roc(as.vector(RS_composite_lab.E_test.txt[,1]),as.vector(standardized.pred_score.dsv.test[,1])),
print.auc = F, col = "red", main = 'Lab')
plot.test = plot(roc(as.vector(RS_composite_lab.E_test.txt[,1]),as.vector(standardized.pred_score.rsf.test[,1])),
print.auc = F, col = "green", lty = 2, print.auc.y = .4,  add = TRUE)
plot.test = plot(roc(as.vector(RS_composite_lab.E_test.txt[,1]),as.vector(standardized.pred_score.cox.test[,1])),
print.auc = F, col = "blue",print.auc.y = .4,  add = TRUE)
legend("bottomright", (c(paste0('DSV \n AUC:',dsv.auc, '\n'), paste0('RSF \n AUC:', rsf.auc), paste0('COX \n AUC:', cox.auc))), lty=c(1,2,1), lwd = 3,
bty="n", col = c('red', 'green', 'blue'))
RS_composite_lab_demo.pred_score.dsv.train.txt = read.delim('../../RS_composite_lab_demo.pred_score.dsv.train.txt', header = F)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
dsv.pred = RS_composite_lab.pred_score.dsv.test.txt
rsf.pred = RS_composite_lab.pred_score.rsf.test.txt
cox.pred = RS_composite_lab.pred_score.cox.test.txt
labels = RS_composite_lab.E_test.txt
## range standardize
standardized.pred_score.dsv.test = range01(log(RS_composite_lab.pred_score.dsv.test.txt))
## range standardize
standardized.pred_score.dsv.test = range01(log(dsv.pred))
standardized.pred_score.dsv.test
standardized.pred_score.cox.test = range01(log(cox.pred))
standardized.pred_score.cox.test
standardized.pred_score.rsf.test = range01(log(rsf.pred+0.000001))
standardized.pred_score.rsf.test
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
ici(RS_composite_lab.E_test.txt[,1], standardized.pred_score.rsf.test[,1])
ece_mce(RS_composite_lab.E_test.txt[,1], standardized.pred_score.rsf.test[,1], 'C')
ece_mce(RS_composite_lab.E_test.txt[,1], standardized.pred_score.dsv.test[,1], 'C')
ece_mce(RS_composite_lab.E_test.txt[,1], standardized.pred_score.rsf.test[,1], 'C')
ece_mce(RS_composite_lab.E_test.txt[,1], standardized.pred_score.cox.test[,1], 'C')
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
## range standardize
standardized.pred_score.dsv.test = range01((dsv.pred))
standardized.pred_score.cox.test = range01((cox.pred))
standardized.pred_score.rsf.test = range01((rsf.pred+0.000001))
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
ece_mce(RS_composite_lab.E_test.txt[,1], standardized.pred_score.dsv.test[,1], 'C')
ece_mce(RS_composite_lab.E_test.txt[,1], standardized.pred_score.rsf.test[,1], 'C')
ece_mce(RS_composite_lab.E_test.txt[,1], standardized.pred_score.cox.test[,1], 'C')
#print('ICI')
ici(RS_composite_lab.E_test.txt[,1], standardized.pred_score.dsv.test[,1])
ici(RS_composite_lab.E_test.txt[,1], standardized.pred_score.rsf.test[,1])
ici(RS_composite_lab.E_test.txt[,1], standardized.pred_score.cox.test[,1])
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1])),
print.auc = F, col = "red", main = 'Lab')
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1])),
print.auc = F, col = "green", lty = 2, print.auc.y = .4,  add = TRUE)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1])),
print.auc = F, col = "blue",print.auc.y = .4,  add = TRUE)
legend("bottomright", (c(paste0('DSV \n AUC:',dsv.auc, '\n'), paste0('RSF \n AUC:', rsf.auc), paste0('COX \n AUC:', cox.auc))), lty=c(1,2,1), lwd = 3,
bty="n", col = c('red', 'green', 'blue'))
dsv.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1]))) %>% round(., 3)
rsf.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1]))) %>% round(., 3)
cox.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1]))) %>% round(., 3)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1])),
print.auc = F, col = "red", main = 'Lab')
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1])),
print.auc = F, col = "green", lty = 2, print.auc.y = .4,  add = TRUE)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1])),
print.auc = F, col = "blue",print.auc.y = .4,  add = TRUE)
legend("bottomright", (c(paste0('DSV \n AUC:',dsv.auc, '\n'), paste0('RSF \n AUC:', rsf.auc), paste0('COX \n AUC:', cox.auc))), lty=c(1,2,1), lwd = 3,
bty="n", col = c('red', 'green', 'blue'))
cali.pipe = function(dsv.pred, rsf.pred, cox.pred, labels){
## range standardize
standardized.pred_score.dsv.test = range01((dsv.pred))
standardized.pred_score.cox.test = range01((cox.pred))
standardized.pred_score.rsf.test = range01((rsf.pred+0.000001))
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
print('ECE')
ece_mce(labels[,1], standardized.pred_score.dsv.test[,1], 'C')
ece_mce(labels[,1], standardized.pred_score.rsf.test[,1], 'C')
ece_mce(labels[,1], standardized.pred_score.cox.test[,1], 'C')
#print('ICI')
ici(labels[,1], standardized.pred_score.dsv.test[,1])
ici(labels[,1], standardized.pred_score.rsf.test[,1])
ici(labels[,1], standardized.pred_score.cox.test[,1])
dsv.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1]))) %>% round(., 3)
rsf.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1]))) %>% round(., 3)
cox.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1]))) %>% round(., 3)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1])),
print.auc = F, col = "red", main = 'Lab')
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1])),
print.auc = F, col = "green", lty = 2, print.auc.y = .4,  add = TRUE)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1])),
print.auc = F, col = "blue",print.auc.y = .4,  add = TRUE)
legend("bottomright", (c(paste0('DSV \n AUC:',dsv.auc, '\n'), paste0('RSF \n AUC:', rsf.auc), paste0('COX \n AUC:', cox.auc))), lty=c(1,2,1), lwd = 3,
bty="n", col = c('red', 'green', 'blue'))
}
cali.pipe(RS_composite_lab.pred_score.dsv.test.txt,
RS_composite_lab.pred_score.rsf.test.txt,
RS_composite_lab.pred_score.cox.test.txt,
RS_composite_lab.E_test.txt)
cali.pipe = function(dsv.pred, rsf.pred, cox.pred, labels){
## range standardize
standardized.pred_score.dsv.test = range01((dsv.pred))
standardized.pred_score.cox.test = range01((cox.pred))
standardized.pred_score.rsf.test = range01((rsf.pred+0.000001))
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
print('ECE')
print(ece_mce(labels[,1], standardized.pred_score.dsv.test[,1], 'C'))
print(ece_mce(labels[,1], standardized.pred_score.rsf.test[,1], 'C'))
print(ece_mce(labels[,1], standardized.pred_score.cox.test[,1], 'C'))
#print('ICI')
# ici(labels[,1], standardized.pred_score.dsv.test[,1])
# ici(labels[,1], standardized.pred_score.rsf.test[,1])
# ici(labels[,1], standardized.pred_score.cox.test[,1])
dsv.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1]))) %>% round(., 3)
rsf.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1]))) %>% round(., 3)
cox.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1]))) %>% round(., 3)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1])),
print.auc = F, col = "red", main = 'Lab')
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1])),
print.auc = F, col = "green", lty = 2, print.auc.y = .4,  add = TRUE)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1])),
print.auc = F, col = "blue",print.auc.y = .4,  add = TRUE)
legend("bottomright", (c(paste0('DSV \n AUC:',dsv.auc, '\n'), paste0('RSF \n AUC:', rsf.auc), paste0('COX \n AUC:', cox.auc))), lty=c(1,2,1), lwd = 3,
bty="n", col = c('red', 'green', 'blue'))
}
source('/opt/home/buckcenter.org/hhuang/DeepSurv/composite/R/Composite_cali/cali_pipe_standardized01.R')
cali.pipe = function(dsv.pred, rsf.pred, cox.pred, labels, auc.title){
print(auc.title)
## range standardize
standardized.pred_score.dsv.test = range01((dsv.pred))
standardized.pred_score.cox.test = range01((cox.pred))
standardized.pred_score.rsf.test = range01((rsf.pred+0.000001))
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
print('ECE')
print(ece_mce(labels[,1], standardized.pred_score.dsv.test[,1], 'C'))
print(ece_mce(labels[,1], standardized.pred_score.rsf.test[,1], 'C'))
print(ece_mce(labels[,1], standardized.pred_score.cox.test[,1], 'C'))
#print('ICI')
# ici(labels[,1], standardized.pred_score.dsv.test[,1])
# ici(labels[,1], standardized.pred_score.rsf.test[,1])
# ici(labels[,1], standardized.pred_score.cox.test[,1])
dsv.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1]))) %>% round(., 3)
rsf.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1]))) %>% round(., 3)
cox.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1]))) %>% round(., 3)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1])),
print.auc = F, col = "red", main = auc.title)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1])),
print.auc = F, col = "green", lty = 2, print.auc.y = .4,  add = TRUE)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1])),
print.auc = F, col = "blue",print.auc.y = .4,  add = TRUE)
legend("bottomright", (c(paste0('DSV \n AUC:',dsv.auc, '\n'), paste0('RSF \n AUC:', rsf.auc), paste0('COX \n AUC:', cox.auc))), lty=c(1,2,1), lwd = 3,
bty="n", col = c('red', 'green', 'blue'))
}
cali.pipe(RS_composite_all.pred_score.dsv.test.txt,
RS_composite_all.pred_score.rsf.test.txt,
RS_composite_all.pred_score.cox.test.txt,
RS_composite_all.E_test.txt,
'ALL')
cali.pipe = function(dsv.pred, rsf.pred, cox.pred, labels, auc.title){
print(auc.title)
## range standardize
standardized.pred_score.dsv.test = range01((dsv.pred))
standardized.pred_score.cox.test = range01((cox.pred))
standardized.pred_score.rsf.test = range01((rsf.pred+0.000001))
reliability_diagram(as.vector(RS_composite_lab.E_test.txt[,1]),
list(as.vector(standardized.pred_score.dsv.test[,1]),
as.vector(standardized.pred_score.rsf.test[,1]),
as.vector(standardized.pred_score.cox.test[,1])),
# 'H',
'C',
c('DSV', 'rsf', 'cox'),
c('blue', 'red', 'green'),
'LR SVM original H')
print('ECE')
print(ece_mce(labels[,1], standardized.pred_score.dsv.test[,1], 'C'))
print(ece_mce(labels[,1], standardized.pred_score.rsf.test[,1], 'C'))
print(ece_mce(labels[,1], standardized.pred_score.cox.test[,1], 'C'))
#print('ICI')
# ici(labels[,1], standardized.pred_score.dsv.test[,1])
# ici(labels[,1], standardized.pred_score.rsf.test[,1])
# ici(labels[,1], standardized.pred_score.cox.test[,1])
browser()
dsv.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1]))) %>% round(., 3)
rsf.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1]))) %>% round(., 3)
cox.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1]))) %>% round(., 3)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1])),
print.auc = F, col = "red", main = auc.title)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.rsf.test[,1])),
print.auc = F, col = "green", lty = 2, print.auc.y = .4,  add = TRUE)
plot.test = plot(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.cox.test[,1])),
print.auc = F, col = "blue",print.auc.y = .4,  add = TRUE)
legend("bottomright", (c(paste0('DSV \n AUC:',dsv.auc, '\n'), paste0('RSF \n AUC:', rsf.auc), paste0('COX \n AUC:', cox.auc))), lty=c(1,2,1), lwd = 3,
bty="n", col = c('red', 'green', 'blue'))
}
cali.pipe(RS_composite_all.pred_score.dsv.test.txt,
RS_composite_all.pred_score.rsf.test.txt,
RS_composite_all.pred_score.cox.test.txt,
RS_composite_all.E_test.txt,
'ALL')
dsv.auc = auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1]))) %>% round(., 3)
labels
as.vector(standardized.pred_score.dsv.test[,1]))
as.vector(standardized.pred_score.dsv.test[,1])
auc(roc(as.vector(labels[,1]),as.vector(standardized.pred_score.dsv.test[,1])))
Q
source('/opt/home/buckcenter.org/hhuang/DeepSurv/composite/R/Composite_cali/cali_pipe_standardized01.R')
dim(labels)
dim(standardized.pred_score.dsv.test)
head(standardized.pred_score.dsv.test)
head(labels)
dim(RS_composite_all.E_test.txt)
dim(RS_composite_all.pred_score.dsv.test.txt)
dim(RS_composite_lab.E_test.txt)
dim(RS_composite_lab.pred_score.dsv.test.txt)
dim(RS_composite_all.E_test.txt)
dim(RS_composite_all.pred_score.dsv.test.txt)
dim(RS_composite_all.pred_score.cox.test.txt)
dim(RS_composite_all.pred_score.rsf.test.txt)
dim(RS_composite_all.pred_score.dsv.train.txt)
dim(RS_composite_all.E_train.txt)
Q
source('/opt/home/buckcenter.org/hhuang/DeepSurv/composite/R/Composite_cali/cali_pipe_standardized01.R')
RS_composite_all.pred_score.dsv.train.txt = read.delim('../../RS_composite_all.pred_score.dsv.train.txt', header = F)
RS_composite_all.pred_score.dsv.test.txt = read.delim('../../RS_composite_all.pred_score.dsv.test.txt', header = F)
RS_composite_all.pred_score.cox.train.txt = read.delim('../../RS_composite_all.pred_score.cox.train.txt', header = F)
RS_composite_all.pred_score.cox.test.txt = read.delim('../../RS_composite_all.pred_score.cox.test.txt', header = F)
RS_composite_all.pred_score.rsf.train.txt = read.delim('../../rsf/RS_composite_all.pred_score.rsf.train.txt', header = F)
RS_composite_all.pred_score.rsf.test.txt = read.delim('../../rsf/RS_composite_all.pred_score.rsf.test.txt', header = F)
RS_composite_all.E_train.txt = read.delim('../../RS_composite_all.E_train.txt', header = F)
RS_composite_all.T_train.txt = read.delim('../../RS_composite_all.T_train.txt', header = F)
RS_composite_all.E_test.txt = read.delim('../../RS_composite_all.E_test.txt', header = F)
RS_composite_all.T_test.txt = read.delim('../../RS_composite_all.T_test.txt', header = F)
cali.pipe(RS_composite_all.pred_score.dsv.test.txt,
RS_composite_all.pred_score.rsf.test.txt,
RS_composite_all.pred_score.cox.test.txt,
RS_composite_all.E_test.txt,
'ALL')
dim(RS_composite_all.E_train.txt)
dim(RS_composite_all.pred_score.dsv.train.txt)
dim(RS_composite_all.pred_score.cox.test.txt)
RS_composite_all.pred_score.cox.train.txt
dim(RS_composite_all.pred_score.cox.train.txt)
dim(RS_composite_all.pred_score.dsv.test.txt)
dim(RS_composite_all.pred_score.rsf.test.txt)
dim(RS_composite_all.pred_score.cox.test.txt)
